@model IEnumerable<TrashCollector.Models.Customer>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("day","Day")
            <div class="col-md-0">
                @{
                    List<SelectListItem> days = new List<SelectListItem>();
                    for (int i = 0; i < 7; i++)
                    {
                        string aDayOfTheWeek = DateTime.Now.AddDays(i).DayOfWeek.ToString();
                        days.Add(new SelectListItem
                        {
                            Text = aDayOfTheWeek,
                            Value = aDayOfTheWeek
                        });
                    }

                }
                @Html.DropDownList("day", days)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-0">
                <input type="submit" value="Check" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

@*@{
    List<SelectListItem> days = new List<SelectListItem>();
    for (int i = 0; i < 7; i++)
    {
        string aDayOfTheWeek = DateTime.Now.AddDays(i).DayOfWeek.ToString();
        days.Add(new SelectListItem
        {
            Text = aDayOfTheWeek,
            Value = aDayOfTheWeek
        });
    }

}
<div id="_day">
    @Html.DropDownList("day", days)
</div>

@_day.ToString()
@Html.ActionLink("Check Day", "Index", new { specifiedDay = })*@
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(modell => modell.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(m => m.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Zipcode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MoneyOwed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PickupDay)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExtraPickup)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SuspendServiceStart)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SuspendServiceEnd)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zipcode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MoneyOwed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PickupDay)
            </td>
            <td>
                @if (item.ExtraPickup.HasValue)
                {
                    @Convert.ToDateTime(item.ExtraPickup).ToString("MM/dd/yyyy")
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SuspendServiceStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SuspendServiceEnd)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", "Customers", new { id = item.ID }, null)
                @Html.ActionLink("Pickup", "PickUpTrash", new { customerID = item.ID })
            </td>
        </tr>
    }

</table>
