@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div class="col-md-6">
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zipcode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zipcode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MoneyOwed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MoneyOwed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickupDay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickupDay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExtraPickup)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExtraPickup)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SuspendServiceStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SuspendServiceStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SuspendServiceEnd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SuspendServiceEnd)
        </dd>

    </dl>
    @if (User.IsInRole("Customer"))
    {
        <p>
            <input type="button" class="btn btn-info" value="Edit" onclick="location.href='@Url.Action("Edit", "Customers", new { id = Model.ID })'" />
            <input type="button" class="btn btn-info" value="Back to List" onclick="location.href='@Url.Action("Index", "Customers")'" />
        </p>
    }
    @if (User.IsInRole("Employee"))
    {
        <p>
            <input type="button" class="btn btn-info" value="Pickup Trash" onclick="location.href='@Url.Action("PickUpTrash", "Employees", new { customerID = Model.ID })'" />
            <input type="button" class="btn btn-info" value="Back to List" onclick="location.href='@Url.Action("Index", "Employees")'" />
        </p>
    }

</div>


@*
    Google maps stuff:
    https://www.youtube.com/watch?v=pRiQeo17u6c

    Axios to get lat/lng from an address (parses a JSON i think):
    https://github.com/axios/axios

*@
@if (User.IsInRole("Employee"))
{
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
        /* Always set the map height explicitly to define the size of the div
           * element that contains the map. */
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
    <div class="col-md-6">
        <div id="map"></div>
        <script>
            var coordinates = geocode();
            console.log(coordinates)


            function geocode() {
                var location = '9425 Sunset Blvd 90210';
                axios.get('https://maps.googleapis.com/maps/api/geocode/json', {
                    params:{
                        address:location,
                        key:'@ViewBag.geocodeAPIKey'
                    }
                })
                .then(function (response) {
                    console.log(response);
                    console.log(response.data.results[0].geometry.location.lat);
                    console.log(response.data.results[0].geometry.location.lng);
                    return response.data.results[0].geometry.location.lat
                })
                .catch(function (error) {
                    console.log(error);
                });
            }


            function initMap() {

                var location = {
                    lat: -34.397,
                    lng: 150.644
                }

                var options = {
                    zoom: 8,
                    center: location
                }

                var map = new google.maps.Map(document.getElementById('map'), options);

                var marker = new google.maps.Marker({
                    position: location,
                    map: map
                });

                var infoWindow = new google.maps.InfoWindow({
                    content: '<h1>Hello World!</h1>'
                });

                marker.addListener('click', function () {
                    infoWindow.open(map, marker);
                });
            }
        </script>
        <script src= "@ViewBag.MapsAPICall" @*This is where the function call initMap() happens*@
                async defer></script>
    </div>
}


@*marker = new google.maps.Marker({
    position = { lat: -34.397, lng: 150.644 }
    map: map
    });*@
