@model TrashCollector.Models.Customer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div class="col-md-6">
    <h4>Customer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(m => m.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Zipcode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Zipcode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MoneyOwed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MoneyOwed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PickupDay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PickupDay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExtraPickup)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExtraPickup)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SuspendServiceStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SuspendServiceStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SuspendServiceEnd)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SuspendServiceEnd)
        </dd>

    </dl>
    @if (User.IsInRole("Customer"))
    {
        <p>
            <input type="button" class="btn btn-info" value="Edit" onclick="location.href='@Url.Action("Edit", "Customers", new { id = Model.ID })'" />
            <input type="button" class="btn btn-info" value="Back to List" onclick="location.href='@Url.Action("Index", "Customers")'" />
        </p>
    }
    @if (User.IsInRole("Employee"))
    {
        <p>
            <input type="button" class="btn btn-info" value="Pickup Trash" onclick="location.href='@Url.Action("PickUpTrash", "Employees", new { customerID = Model.ID })'" />
            <input type="button" class="btn btn-info" value="Back to List" onclick="location.href='@Url.Action("Index", "Employees")'" />
        </p>
    }

</div>


@*
    Google maps stuff:
    https://www.youtube.com/watch?v=pRiQeo17u6c

    Axios to get lat/lng from an address (parses a JSON i think):
    https://github.com/axios/axios

*@
@if (User.IsInRole("Employee"))
{
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
        #map {
            height: 400px;
            width: 100%;
        }
    </style>


    <div class="col-md-6">
        <div id="map"></div>
        <script>

            @*var string = "@ViewBag.geocodeCall";
            var splitstring = string.split('amp;');
            _string = splitstring[0] + splitstring[1];*@

            // Do it this way because javascript turns & into &amp; sometimes. It didn't do that for the maps API call though.
            //var geocodeAPICall = "";
            //var apiUrl = "@ViewBag.geocodeBase";
            var _address = "@ViewBag.addressAndZipcode";
            var _key = "@ViewBag.geocodeKey";
            //geocodeAPICall = apiUrl + _address + "&key=" + _key;
            
            var latAndLng
            function geocode() {
                axios.get('https://maps.googleapis.com/maps/api/geocode/json', { params: { address: _address, key: _key } })
                    .then((response) => {
                        latAndLng = response.data.results[0].geometry.location;
                        //console.log(latAndLng);

                        initMap();
                    });
            }

            function initMap() {
                var location = {
                    lat: latAndLng.lat,
                    lng: latAndLng.lng
                }

                var options = {
                    zoom: 13,
                    center: location
                }

                var map = new google.maps.Map(document.getElementById('map'), options);

                var marker = new google.maps.Marker({
                    position: location,
                    map: map
                });

                var infoWindow = new google.maps.InfoWindow({
                    content: '@ViewBag.addressAndZipcode'
                });

                marker.addListener('click', function () {
                    infoWindow.open(map, marker);
                });
            }

            function mapFunction() {
                geocode();
            }
        </script>

        <script src="@ViewBag.mapsCall"
                async defer></script>
    </div>


}

